# {{docs["primitive"]}}

([back](../README.md#documentation))

All transmission of information over a physical medium that uses binary bits
must be formatted so that receivers can understand it.

This document describes fundamental types used to transfer data.

## Standard Types

All transmission of information uses these standard types, the telemetry
runtime can only otherwise be extended with custom enumerations. Channels can
only store the following primitive types:

Name | Bytes | Signed | Integer
-----|-------|--------|--------
{% for item in primitives["entries"] %}
`{{item["name"]}}` | {{item["bytes"]}} | `{{item["signed"]}}` | `{{item["integer"]}}`
{% endfor %}

## Defaults

Some protocol constants must be understood ahead of trying to parse messages.
Based on the purpose of a "header" or metadata field in a message, the default
types used are as follows:

Purpose | Type
--------|-----
{% for key, value in defaults.items() %}
`{{key}}` | `{{value}}`
{% endfor %}

**It is expected that clients and servers implementing protocols defined by
this project understand these defaults ahead of encoding or decoding
information.**

These defaults can change based on `version`, so implementations should keep
track of one or more "`version` to defaults" mappings in order to correctly
encode and decode messages. It is assumed that the mapping of `version` to
`uint8` will **never** change.
